// SPDX-License-Identifier: GPL-2.0 OR X11
/*
 * Copyright 2015 Boundary Devices, Inc.
 * Copyright 2021 Logos Payment Solutions A/S
 */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	memory@10000000 {
		device_type = "memory";
		reg = <0x10000000 0x20000000>; /* 512 MB */
	};

	chosen {
		stdout-path = &uart4;
	};

	aliases {
		mmc0 = &usdhc4; // eMMC on NiCore8
		mmc1 = &usdhc3;
		mmc2 = &usdhc1;
		usb0 = &usbotg;
		usb1 = &usbh1;
		ethernet0 = &fec;
        //backlight_lvds = &backlight_lvds;
        fb_lvds = &fb_lvds;
        ldb = &ldb;
        mxcfb0 = &fb_lvds;
        //pwm_lvds = &pwm4;
	};

	leds {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_leds>;

		compatible = "gqpio-leds";

		/* LED1 on schematic, LED2 on board */
		led1 {
			label = "nicore8:green:heartbeat";
			gpios = <&gpio6 7 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		/* LED2 on schematic, LED3 on board */
		led2 {
			label = "nicore8:green:usr3";
			gpios = <&gpio6 9 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "cpu0";
			default-state = "off";
		};
	};

    /*
    backlight_lvds: backlight-lvds {
        compatible = "pwm-backlight";
        pwms = <&pwm4 0 5000000>; // MX6QDL_PAD_KEY_ROW0__GPIO4_IO07 - DISP_BKLT_PWM

        brightness-levels = <0 4 8 16 32 64 128 255>;
        default-brightness-level = <8>;

        //display = <&fb_lvds>;
        power-supply = <&reg_3p3v>;
        enable-gpios = <&gpio 4 6>; // MX6QDL_PAD_KEY_COL0__GPIO4_IO06 - DISP_VDD_EN
        status = "okay";
    };
    */

    // LVDS frame buffer node - binding to MXC graphics driver
    fb_lvds: fb@0 {
        compatible = "fsl,mxc_sdc_fb";
        disp_dev = "ldb";
        interface_pix_fmt = "RGB24";
        default_bpp = <32>;
        int_clk = <0>;
        late_init = <0>;
        status = "okay";
    };

    // SHARP LQ121 12.1"
    /*
    panel_lvds0 {
        compatible = "sharp,lq121s1lg86";
        backlight = <&backlight_lvds>;
        port {
            panel_in: endpoint {
                remote-endpoint = <&lvds0_out>;
            };
        };
    };
    */

    // LVDS Display Bridge - interface of the i.MX6 CPU that connects the IPU to an external LVDS display interface
    ldb@020e0000 {
        status = "okay";
        lvds-channel@0 {
            crtc = "ipu1-di0";
            fsl,data-mapping = "jeida";
            fsl,data-width = <24>; // TODO: ? 18-bit 262144 colors.
            primary;
            status = "okay";

            native-mode = <&timing0>;
            timing0: lq121s1lg86 {
                clock-frequency = <40000000>;
                hactive = <800>;
                vactive = <600>;
                hfront-porch = <246>; // TH - THd = 1056 - 800 = 256 - 10 (hsync-len) = 246
                hback-porch = <0>;
                hsync-len = <10>; // Not mentioned in datasheet, driver does not allow 0.
                vback-porch = <0>;
                vfront-porch = <56>; // TV - TVd = 666 - 600 = 66 - 10 (vsync-len) =  56
                vsync-len = <10>; // Not mentioned in datasheet, driver does not allow 0.
            };
        };
    };

    regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_2p5v: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "2P5V";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <2500000>;
			regulator-always-on;
		};

		reg_3p3v: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;			
			regulator-name = "3P3V";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_usb_otg_vbus: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio4 15 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};
	};
};

&iomuxc {
	pinctrl-names = "default";

	imx6dl-nicore8 {
		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D17__ECSPI1_MISO		0x100b1
				MX6QDL_PAD_EIM_D18__ECSPI1_MOSI		0x100b1
				MX6QDL_PAD_EIM_D16__ECSPI1_SCLK		0x100b1
				MX6QDL_PAD_EIM_EB2__GPIO2_IO30		0x000b1
				>;
			};

		pinctrl_usbotgvbus: usbotgvbusgrp {
			fsl,pins = <
				MX6QDL_PAD_KEY_ROW4__GPIO4_IO15		0x130b0
			>;
		};

		pinctrl_enet: enetgrp {
			fsl,pins = <
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO		0x1b0b0
				MX6QDL_PAD_ENET_MDC__ENET_MDC		0x1b0b0
				MX6QDL_PAD_RGMII_TXC__RGMII_TXC		0x1b030
				MX6QDL_PAD_RGMII_TD0__RGMII_TD0		0x1b030
				MX6QDL_PAD_RGMII_TD1__RGMII_TD1		0x1b030
				MX6QDL_PAD_RGMII_TD2__RGMII_TD2		0x1b030
				MX6QDL_PAD_RGMII_TD3__RGMII_TD3		0x1b030
				MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL	0x1b030
				MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK	0x0a0b1
				MX6QDL_PAD_RGMII_RXC__RGMII_RXC		0x1b030
				MX6QDL_PAD_RGMII_RD0__RGMII_RD0		0x13030
				MX6QDL_PAD_RGMII_RD1__RGMII_RD1		0x13030
				MX6QDL_PAD_RGMII_RD2__RGMII_RD2		0x1b030
				MX6QDL_PAD_RGMII_RD3__RGMII_RD3		0x1b030
				MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL	0x130b0
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25	0x130b0 // RGMII_nRST
				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27	0x180b0 // RGMII_INT
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL		0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA		0x4001b8b1
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_5__I2C3_SCL		0x4001b8b1
				MX6QDL_PAD_GPIO_6__I2C3_SDA		0x4001b8b1
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX6QDL_PAD_ENET_TX_EN__I2C4_SCL		0x4001b8b1
				MX6QDL_PAD_ENET_TXD1__I2C4_SDA		0x4001b8b1
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
			      MX6QDL_PAD_GPIO_9__WDOG1_B		0x1b0b0
			>;
		};

		pinctrl_leds: ledsgrp {
			fsl,pins = <
			      MX6QDL_PAD_NANDF_CLE__GPIO6_IO07	0x0b0b0 // LED 2, output 40 Ohm
			      MX6QDL_PAD_NANDF_WP_B__GPIO6_IO09	0x0b0b0 // LED 3, output 40 Ohm
			      >;
		};

		/* SER1 on schematics */
		pinctrl_uart2: uart2grp {
			fsl,pins = <
			       MX6QDL_PAD_EIM_D26__UART2_TX_DATA	0x1b0b1
			       MX6QDL_PAD_EIM_D27__UART2_RX_DATA	0x1b0b1
			>;
		};

		/* SER0 on schematics */
		pinctrl_uart4: uart4grp {
			fsl,pins = <
			       MX6QDL_PAD_CSI0_DAT12__UART4_TX_DATA	0x1b0b1
			       MX6QDL_PAD_CSI0_DAT13__UART4_RX_DATA	0x1b0b1
			       MX6QDL_PAD_CSI0_DAT17__UART4_CTS_B	0x1b0b1
			       MX6QDL_PAD_CSI0_DAT16__UART4_RTS_B	0x1b0b1
			>;
		};

		/* SER2 on schematics */
		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT14__UART5_TX_DATA	0x1b0b1
				MX6QDL_PAD_CSI0_DAT14__UART5_RX_DATA	0x1b0b1
				MX6QDL_PAD_CSI0_DAT18__UART5_RTS_B	0x1b0b1
				MX6QDL_PAD_CSI0_DAT19__UART5_CTS_B	0x1b0b1
			>;
		};

		pinctrl_usdhc4_50mhz: usdhc4_50mhzgrp {
			fsl,pins = <
				MX6QDL_PAD_SD4_CMD__SD4_CMD		0x17059
				MX6QDL_PAD_SD4_CLK__SD4_CLK		0x10059
				MX6QDL_PAD_SD4_DAT0__SD4_DATA0		0x17059
				MX6QDL_PAD_SD4_DAT1__SD4_DATA1		0x17059
				MX6QDL_PAD_SD4_DAT2__SD4_DATA2		0x17059
				MX6QDL_PAD_SD4_DAT3__SD4_DATA3		0x17059
				MX6QDL_PAD_SD4_DAT4__SD4_DATA4		0x17059
				MX6QDL_PAD_SD4_DAT5__SD4_DATA5		0x17059
				MX6QDL_PAD_SD4_DAT6__SD4_DATA6		0x17059
				MX6QDL_PAD_SD4_DAT7__SD4_DATA7		0x17059
			>;
		};

        /* TODO: CTP We need to verify HW mapping first
        pinctrl_pwm1: pwm1grp {
            fsl,pins = <
            MX6QDL_PAD_SD1_DAT3__PWM1_OUT           0x1b0b1
            >;
        };

        pinctrl_pwm2: pwm2grp {
            fsl,pins = <
            MX6QDL_PAD_SD1_DAT3__PWM1_OUT           0x1b0b1
            >;
        };

        pinctrl_pwm3: pwm3grp {
            fsl,pins = <
            MX6QDL_PAD_SD1_DAT1__PWM3_OUT           0x1b0b1
            >;
        };

        pinctrl_pwm4: pwm4grp {
            fsl,pins = <
            MX6QDL_PAD_SD1_CMD__PWM4_OUT            0x1b0b1
            >;
        };
        */

	};
};

&clks {
	assigned-clocks = <&clks IMX6QDL_CLK_LDB_DI0_SEL>,
		<&clks IMX6QDL_CLK_LDB_DI1_SEL>;
	assigned-clock-parents = <&clks IMX6QDL_CLK_PLL3_USB_OTG>,
		<&clks IMX6QDL_CLK_PLL3_USB_OTG>;
};

&ecspi1 {
	cs-gpios = <&gpio2 30 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	status = "okay";

	spiflash: w25q32dw@0 {
		compatible = "winbond,w25q32dw", "jedec,spi-nor";
		spi-max-frequency = <5000000>;
		reg = <0>;
	};
};

&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet>;
	phy-mode = "rgmii-id";
	phy-handle = <&phy>;
	phy-reset-duration = <10>;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

   		/* Atheros AR8035 PHY */
		phy: ethernet-phy@4 {
			reg = <4>;
			reset-gpios = <&gpio1 25 GPIO_ACTIVE_LOW>;
			qca,clk-out-frequency = <125000000>;
		};
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

    pmic: pfuze100@8 {
        compatible = "fsl,pfuze100";
        reg = <0x08>;

        regulators {
            // VDD_CORE
            sw1a_reg: sw1ab {
                regulator-min-microvolt = <300000>;
                regulator-max-microvolt = <1375000>;
                regulator-boot-on;
                regulator-always-on;
                regulator-ramp-delay = <6250>;
            };

            // VDD_SOC
            sw1c_reg: sw1c {
                regulator-min-microvolt = <300000>;
                regulator-max-microvolt = <1375000>;
                regulator-boot-on;
                regulator-always-on;
                regulator-ramp-delay = <6250>;
            };

            // GEN_3V3
            sw2_reg: sw2 {
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
                regulator-always-on;
            };

            // DDR_1V35
            sw3a_reg: sw3a {
                regulator-min-microvolt = <400000>;
                regulator-max-microvolt = <1350000>;
                regulator-boot-on;
                regulator-always-on;
            };

            /* Check this?
            sw3b_reg: sw3b {
                regulator-min-microvolt = <400000>;
                regulator-max-microvolt = <1350000>;
                regulator-boot-on;
                regulator-always-on;
            };
            */

            // SWBST_5V
            swbst_reg: swbst {
                regulator-min-microvolt = <5000000>;
                regulator-max-microvolt = <5150000>;
                regulator-boot-on;
                regulator-always-on;
            };

            snvs_reg: vsnvs {
                regulator-min-microvolt = <1000000>;
                regulator-max-microvolt = <3000000>;
                regulator-boot-on;
                regulator-always-on;
            };

            vref_reg: vrefddr {
                regulator-boot-on;
                regulator-always-on;
            };

            // vgen1 (1.5V), vgen2 (1.5V) and vgen3 (2.5V) unused

            vgen4_reg: vgen4 {
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <1800000>;
                regulator-boot-on;
                regulator-always-on;
            };

            vgen5_reg: vgen5 {
                regulator-min-microvolt = <2800000>;
                regulator-max-microvolt = <2800000>;
                regulator-boot-on;
                regulator-always-on;
            };

            vgen6_reg: vgen6 {
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
                regulator-always-on;
            };
        };
    };
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	uart-has-rtscts;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	uart-has-rtscts;
	status = "okay";
};

&usdhc4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4_50mhz>;
	vmmc-supply = <&reg_3p3v>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&wdog1 {
	status = "disabled";
};

&wdog2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

